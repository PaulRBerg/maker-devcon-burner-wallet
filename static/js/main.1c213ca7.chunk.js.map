{"version":3,"sources":["../../burner-ui/src/components/AmountInput.module.css","../../burner-ui/src/components/AssetSelector.module.css","../../burner-ui/src/Pages/HomePage/BalanceRow.module.css","../../burner-ui/src/Pages/ReceivePage/ReceivePage.module.css","../../burner-ui/src/components/AddressInputAccount.module.css","../../burner-ui/src/components/AddressInputSearchResults.module.css","serviceWorker.ts","../../burner-ui/src/Plugins.ts","../../burner-ui/src/BurnerProvider.tsx","../../burner-ui/src/components/Page.tsx","../../burner-ui/src/components/AmountInput.tsx","../../burner-ui/src/data-providers/AccountBalance.tsx","../../burner-ui/src/data-providers/Assets.tsx","../../burner-ui/src/components/AssetSelector.tsx","../../burner-ui/src/components/Button.tsx","../../burner-ui/src/data-providers/AccountKeys.tsx","../../burner-ui/src/data-providers/TransactionDetails.tsx","../../burner-ui/src/components/burnerComponents.ts","../../burner-ui/src/components/Header.tsx","../../burner-ui/src/components/Loading.tsx","../../burner-ui/src/components/Scanner.tsx","../../burner-ui/src/components/PluginElements.tsx","../../burner-ui/src/Pages/AdvancedPage/AdvancedPage.tsx","../../burner-ui/src/Pages/AdvancedPage/index.ts","../../burner-ui/src/components/LineItem.tsx","../../burner-ui/src/Pages/ConfirmPage/index.ts","../../burner-ui/src/Pages/ConfirmPage/ConfirmPage.tsx","../../burner-ui/src/HistoryProvider.tsx","../../burner-ui/src/data-providers/History.tsx","../../burner-ui/src/constants.tsx","../../burner-ui/src/Pages/HomePage/BalanceRow.tsx","../../burner-ui/src/Pages/HomePage/HistoryListEvent.tsx","../../burner-ui/src/Pages/HomePage/HomePage.tsx","../../burner-ui/src/Pages/HomePage/index.ts","../../burner-ui/src/Pages/ReceiptPage/index.ts","../../burner-ui/src/Pages/ReceiptPage/ReceiptPage.tsx","../../burner-ui/src/Pages/ReceivePage/ReceivePage.tsx","../../burner-ui/src/Pages/ReceivePage/index.ts","../../burner-ui/src/components/AddressInputAccount.tsx","../../burner-ui/src/components/AddressInputField.tsx","../../burner-ui/src/components/AddressInputSearchResults.tsx","../../burner-ui/src/Pages/SendPage/SendPage.tsx","../../burner-ui/src/Pages/SendPage/index.ts","../../burner-ui/src/Pages/index.ts","../../burner-ui/src/Pages/Pages.tsx","../../burner-ui/src/Template.tsx","../../burner-ui/src/BurnerUI.tsx","../../burner-ui/src/index.ts","index.tsx"],"names":["module","exports","inputContainer","input","unit","selectContainer","selectBox","selectDropdown","dropdownItem","assetElement","assetName","assetBalance","balanceRow","qrContainer","addressContainer","address","copied","copyHidden","account","avatar","names","title","subtitle","results","list","listElement","enabled","Boolean","window","location","hostname","match","DEFAULT_PLUGIN_DATA","pages","homeButtons","elements","accountSearches","tryHandleQR","Plugins","plugins","ui","_this","this","Object","classCallCheck","changeListeners","qrHandlers","pluginData","_objectSpread","bind","forEach","plugin","initializePlugin","getPluginContext","listener","push","_this2","addElement","position","Component","addPluginElement","onAccountSearch","callback","addAccountSearch","onQRScanned","addPage","path","addPluginPage","addHomeButton","addPluginHomeButton","getAssets","getWeb3","network","options","getCore","newData","_this3","WrappedComponent","withBurner","setPluginData","concat","toConsumableArray","existingElements","defineProperty","qr","context","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","handler","value","err","return","unavailable","Error","React","createContext","actions","callSigner","canCallSigner","navigateTo","scanQrCode","send","setLoading","assets","accounts","burnerComponents","completeScan","loading","Provider","Consumer","BurnerProvider","props","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","core","state","Number","isInteger","history","go","status","setState","getAccounts","onAccountChange","Promise","resolve","reject","result","asset","_ref","ether","to","from","message","_from","_ether","length","_this$props","children","_this$state","react_default","a","createElement","withRouter","burnerContext","assign","injectSheet","theme","page","background","paperBackground","padding","borderRadius","color","Color","isLight","titleBar","display","borderBottom","marginBottom","height","titleText","fontSize","textAlign","flex","lineHeight","corner","width","close","textDecoration","classes","className","react_router_dom","require","AmountInput","usdValue","onChange","disabled","isUSD","getUSDValue","toString","parseFloat","e","type","placeholder","min","name","balanceCache","setCache","key","balance","timestamp","Date","now","AccountBalance","timer","_isMounted","data","fetchData","poll","oldProps","clearTimeout","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","assetList","filter","_asset","id","cacheKey","cachedVal","getBalance","getAsset","usdBalance","displayBalance","getDisplayValue","console","warn","_context3","t0","render","react","AssetElement","data_providers_AccountBalance","AssetSelector","_ref2","selected","_useState","useState","_useState2","slicedToArray","isOpen","setOpen","useEffect","clickListener","document","addEventListener","removeEventListener","Dropdown","selectedAsset","onClick","AssetSelector_AssetElement","map","data_providers_Assets","button","backgroundColor","accentColor","luminosity","desaturate","hsl","string","cursor","clickHandler","preventDefault","_className","join","AccountKeys","keys","updateKeys","indexOf","privateKey","burnAccount","TransactionDetails","tx","getTx","txHash","components_burnerComponents","Page","Button","Assets","QRCode","Header","header","titleContainer","spacer","headerAccount","substr","defaultProps","alignItems","flexDirection","fontFamily","titleFont","overlay","top","bottom","left","right","zIndex","justifyContent","instruction","marginTop","cameraIconContainer","cameraIcon","readerContainer","overflow","reader","useRef","fallback","setFallback","current","openImageDialog","viewBox","fill","d","react_qr_reader_lib_default","delay","ref","legacyMode","onError","error","onScan","objectWithoutProperties","i","Section","AdvancedPage","_React$useState","_React$useState2","showPk","setShowPk","components_Page","data_providers_AccountKeys","AdvancedPage_Section","style","components_Button","navigator","clipboard","writeText","lib_default","renderAs","readOnly","components_PluginElements","line","margin","lineName","fontWeight","lineValue","textOverflow","ConfirmPage","replace","sending","setSending","_history$location$sta","_assets$filter","receipt","sent","transactionHash","apply","arguments","components_LineItem","goBack","historyFns","getHistoryEvents","onHistoryEvent","removeHistoryEventListener","HistoryProvider","cb","HistoryProvider_Provider","History","onHistoryEventCallback","events","event","withHistory","HistoryProvider_Consumer","SCAN_QR_DATAURI","BalanceRow","HistoryPluginElements","PluginElements","container","whiteSpace","details","mainDetail","minWidth","marginRight","subDetail","main","isReceive","HomeButton","buttonContainer","homeButton","ADDRESS_REGEX","PK_REGEX","HomePage","balances","buttons","flexWrap","boxSizing","homeButtonColor","scanBtn","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","lighten","advancedLink","abrupt","test","origin","HomePage_BalanceRow","HomePage_HomeButton","_ref4","data_providers_History","HomePage_HistoryListEvent","JSON","stringify","ReceiptPage","data_providers_TransactionDetails","params","displayValue","ReceivePage","showCopied","setShowCopied","Fragment","AddressInputAccount","picture","styles","border","textField","clearBtn","scan","_account","components_AddressInputAccount","target","AddressInputSearchResults","onSelect","SendPage","search","all","searchFn","_accounts","_Array$prototype","Array","prototype","_this$state2","_this$props2","react_router","canSend","components_AssetSelector","newAsset","components_AddressInputField","scanCode","components_AddressInputSearchResults","components_AmountInput","supportsMessages","messageField","sendContainer","Pages","exact","component","defaultTheme","font","WrappedContainer","@global","body","backgroundAttachment","fontSmoothing","html","#root","maxWidth","Template","react_jss_lib","Template_objectSpread","BurnerUI","getData","onDataChange","src_BurnerProvider","HistoryProvider_HistoryProvider","src_Template","components_Loading","components_Scanner","components_Header","src_Pages","localStorage","getItem","replaceState","removeItem","BurnerCore","signers","InjectedSigner","LocalSigner","gateways","InjectedGateway","InfuraGateway","process","XDaiGateway","xdai","dai","eth","exchange","Exchange","pairs","xdaiBridge","uniswapDai","ReactDOM","src","LegacyPlugin","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c213ca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"AmountInput_inputContainer__1t77L\",\"input\":\"AmountInput_input__qrMt-\",\"unit\":\"AmountInput_unit__DempS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"AssetSelector_selectContainer__FBBZ3\",\"selectBox\":\"AssetSelector_selectBox__1lbi7\",\"selectDropdown\":\"AssetSelector_selectDropdown__3F-Pb\",\"dropdownItem\":\"AssetSelector_dropdownItem__LfBZx\",\"assetElement\":\"AssetSelector_assetElement__3psYE\",\"assetName\":\"AssetSelector_assetName__1JF0o\",\"assetBalance\":\"AssetSelector_assetBalance__3gg68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceRow\":\"BalanceRow_balanceRow__2Jgd1\",\"assetName\":\"BalanceRow_assetName__2y9f2\",\"assetBalance\":\"BalanceRow_assetBalance__bETv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qrContainer\":\"ReceivePage_qrContainer__2eO31\",\"addressContainer\":\"ReceivePage_addressContainer__1sTrX\",\"address\":\"ReceivePage_address___5lip\",\"copied\":\"ReceivePage_copied__2A9by\",\"copyHidden\":\"ReceivePage_copyHidden__1cUSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"AddressInputAccount_account__1jnQk\",\"avatar\":\"AddressInputAccount_avatar__2_ELG\",\"names\":\"AddressInputAccount_names__1bE4x\",\"title\":\"AddressInputAccount_title__1urU5\",\"subtitle\":\"AddressInputAccount_subtitle__1sHXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"AddressInputSearchResults_results__1dq1p\",\"list\":\"AddressInputSearchResults_list__1GOiI\",\"listElement\":\"AddressInputSearchResults_listElement__1pXmW\",\"enabled\":\"AddressInputSearchResults_enabled__3OYHl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ComponentType } from 'react';\nimport { Asset } from '@burner-wallet/assets';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { withBurner, Actions } from './BurnerProvider';\nimport BurnerUI from './BurnerUI';\nimport { Plugin, PluginPage, BasePluginContext, PluginElement } from './';\n\ninterface PluginPageData {\n  path: string,\n  Component: ComponentType<BasePluginContext & RouteComponentProps>,\n  plugin: Plugin,\n}\n\nexport interface PluginElementData {\n  Component: ComponentType<BasePluginContext>,\n  plugin: Plugin,\n}\n\ninterface PluginHomeButton {\n  title: string,\n  path: string,\n}\n\ninterface PluginContext {\n  actions: Actions,\n}\n\ntype AccountSearchFn = (query: string) => Promise<Account[]>;\ntype QRScannedFn = (qr: string, context?: PluginContext) => boolean;\n\nexport interface BurnerPluginData {\n  pages: PluginPageData[],\n  homeButtons: PluginHomeButton[],\n  elements: { [position:string]: PluginElementData[] },\n  accountSearches: AccountSearchFn[],\n  tryHandleQR: (qr: string, context: PluginContext) => boolean,\n}\n\nexport interface BurnerPluginContext {\n  addElement: (position: string, Component: PluginElement) => void,\n  addHomeButton: (title: string, path: string) => any,\n  addPage: (path: string, Component: PluginPage) => any,\n  getAssets: () => Asset[],\n  getWeb3: (network: string, options?: any) => any,\n  onAccountSearch: (callback: AccountSearchFn) => void,\n  onQRScanned: (callback: QRScannedFn) => void,\n}\n\nexport const DEFAULT_PLUGIN_DATA = {\n  pages: [],\n  homeButtons: [],\n  elements: {},\n  accountSearches: [],\n  tryHandleQR: () => false,\n};\n\nexport default class Plugins {\n  private changeListeners: ((data: BurnerPluginData) => void)[];\n  private qrHandlers: QRScannedFn[];\n  private pluginData: BurnerPluginData;\n  private ui: BurnerUI;\n\n  constructor(plugins: Plugin[], ui: BurnerUI) {\n    this.changeListeners = [];\n    this.qrHandlers = [];\n    this.ui = ui;\n    this.pluginData = {\n      ...DEFAULT_PLUGIN_DATA,\n      tryHandleQR: this.tryHandleQR.bind(this),\n    };\n\n    plugins.forEach(plugin => plugin.initializePlugin(this.getPluginContext(plugin)));\n  }\n\n  onDataChange(listener: (data: BurnerPluginData) => void) {\n    this.changeListeners.push(listener);\n  }\n\n  getData() {\n    return this.pluginData;\n  }\n\n  getPluginContext(plugin: Plugin): BurnerPluginContext {\n    return {\n      addElement: (position: string, Component: PluginElement) =>\n        this.addPluginElement(plugin, position, Component),\n      onAccountSearch: (callback: AccountSearchFn) => this.addAccountSearch(callback),\n      onQRScanned: (callback: QRScannedFn) => this.qrHandlers.push(callback),\n      addPage: (path: string, Component: PluginPage) => this.addPluginPage(plugin, path, Component),\n      addHomeButton: (title: string, path: string) => this.addPluginHomeButton(plugin, title, path),\n      getAssets: () => this.ui.getAssets(),\n      getWeb3: (network: string, options?: any) => this.ui.getCore().getWeb3(network, options),\n    };\n  }\n\n  setPluginData(newData: any) {\n    this.pluginData = {\n      ...this.pluginData,\n      ...newData,\n    };\n    this.changeListeners.forEach(listener => listener(this.pluginData));\n  }\n\n  addPluginPage(plugin: Plugin, path: string, Component: PluginPage) {\n    const WrappedComponent = withBurner(Component);\n    this.setPluginData({\n      pages: [...this.pluginData.pages, { plugin, path, Component: WrappedComponent }],\n    });\n  }\n\n  addPluginHomeButton(plugin: Plugin, title: string, path: string) {\n    this.setPluginData({\n      homeButtons: [...this.pluginData.homeButtons, { plugin, title, path }],\n    });\n  }\n\n  addPluginElement(plugin: Plugin, position: string, Component: PluginElement) {\n    const WrappedComponent = withBurner(Component);\n    const existingElements = this.pluginData.elements[position] || [];\n    this.setPluginData({\n      elements: {\n        ...this.pluginData.elements,\n        [position]: [...existingElements, { plugin, Component: WrappedComponent }],\n      },\n    });\n  }\n\n  addAccountSearch(callback: AccountSearchFn) {\n    this.setPluginData({\n      accountSearches: [...this.pluginData.accountSearches, callback],\n    });\n  }\n\n  tryHandleQR(qr: string, context: PluginContext) {\n    for (const handler of this.qrHandlers) {\n      if (handler(qr, context)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import React, { Component, ComponentType } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Asset } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport { BurnerComponents } from './components/burnerComponents';\nimport { BurnerPluginData, DEFAULT_PLUGIN_DATA } from './Plugins';\nimport { Diff } from './';\n\ninterface BurnerProviderProps extends RouteComponentProps {\n  core: BurnerCore,\n  pluginData: BurnerPluginData,\n  children: React.ReactNode,\n  burnerComponents: BurnerComponents,\n}\n\ninterface SendParams {\n  asset: string,\n  ether: string,\n  to: string,\n  from?: string,\n  message?: string | null,\n}\n\nexport interface Actions {\n  callSigner: (action: string, ...props: any[]) => string,\n  canCallSigner: (action: string, ...props: any[]) => boolean,\n  scanQrCode: () => Promise<string>,\n  send: (params: SendParams) => void,\n  navigateTo: (location: string | number, state?: any) => void,\n  setLoading: (status: string | null) => void,\n}\n\nexport interface BurnerContext {\n  actions: Actions,\n  accounts: string[],\n  assets: Asset[],\n  burnerComponents: BurnerComponents,\n  pluginData: BurnerPluginData,\n  completeScan: ((result: string | null) => any) | null,\n  loading: string | null,\n}\n\ninterface BurnerProviderState {\n  accounts: string[],\n  completeScan: ((result: string | null) => any) | null,\n  loading: string | null,\n}\n\nconst unavailable = () => { throw new Error('Unavailable') };\nconst { Provider, Consumer } = React.createContext<BurnerContext>({\n  actions: {\n    callSigner: unavailable,\n    canCallSigner: unavailable,\n    navigateTo: unavailable,\n    scanQrCode: unavailable,\n    send: unavailable,\n    setLoading: unavailable,\n  },\n  assets: [],\n  accounts: [],\n  pluginData: DEFAULT_PLUGIN_DATA,\n  burnerComponents: {} as BurnerComponents,\n  completeScan: null,\n  loading: null,\n});\n\nclass BurnerProvider extends Component<BurnerProviderProps, BurnerProviderState> {\n  private actions: Actions;\n\n  constructor(props: BurnerProviderProps) {\n    super(props);\n\n    this.actions = {\n      scanQrCode: this.scanQrCode.bind(this),\n      canCallSigner: props.core.canCallSigner.bind(props.core),\n      callSigner: props.core.callSigner.bind(props.core),\n      send: this.send.bind(this),\n      navigateTo: (location: string | number, state?: any) =>\n        Number.isInteger(location as number)\n        ? props.history.go(location as number)\n        : props.history.push(location as string, state),\n      setLoading: (status: string | null) => this.setState({ loading: status }),\n    };\n\n    this.state = {\n      accounts: [],\n      completeScan: null,\n      loading: null,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      accounts: this.props.core.getAccounts(),\n    });\n    this.props.core.onAccountChange((accounts: string[]) => this.setState({ accounts }));\n  }\n\n  scanQrCode() {\n    return new Promise<string>((resolve, reject) => {\n      const completeScan = (result: string | null) => {\n        this.setState({ completeScan: null });\n        if (result) {\n          resolve(result);\n        } else {\n          reject(new Error('User canceled'));\n        }\n      };\n      this.setState({ completeScan });\n    });\n  }\n\n  send({ asset, ether, to, from, message }: SendParams) {\n    const _from = from || this.state.accounts[0];\n    const _ether = ether && ether.length > 0 ? ether : '0';\n    this.props.history.push('/confirm', { asset, ether: _ether, to, from: _from, message });\n  }\n\n  render() {\n    const { core, pluginData, children, burnerComponents } = this.props;\n    const { accounts, completeScan, loading } = this.state;\n    return (\n      <Provider value={{\n        actions: this.actions,\n        accounts,\n        assets: core.getAssets(),\n        burnerComponents,\n        completeScan,\n        pluginData,\n        loading,\n      }}>\n        {children}\n      </Provider>\n    )\n  }\n}\n\nexport default withRouter(BurnerProvider);\n\nexport function withBurner<P>(WrappedComponent: ComponentType<P>): ComponentType<Diff<P, BurnerContext>> {\n  return function(props) {\n    return (\n      <Consumer>\n        {(burnerContext: BurnerContext) => <WrappedComponent {...burnerContext} {...props as P} />}\n      </Consumer>\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport Color from 'color';\n\nconst style = (theme: any) => ({\n  page: {\n    background: theme.paperBackground,\n    padding: 15,\n    borderRadius: 5,\n    color: Color(theme.paperBackground).isLight() ? '#333333' : '#EEEEEE',\n  },\n  titleBar: {\n    display: 'flex',\n    borderBottom: '1px solid rgba(0, 0, 0, .1)',\n    marginBottom: 5,\n    height: 64,\n  },\n  titleText: {\n    fontSize: 22,\n    textAlign: 'center',\n    flex: '1 0',\n    lineHeight: '64px',\n  },\n  corner: {\n    width: 64,\n  },\n  close: {\n    fontSize: 54,\n    textDecoration: 'none',\n    display: 'block',\n    textAlign: 'center',\n  },\n});\n\nexport interface PageProps {\n  children: React.ReactNode,\n  title?: string,\n  classes: any,\n}\n\nconst Page: React.FC<PageProps> = ({ children, title, classes }) => (\n  <div className={classes.page}>\n    {title && (\n      <div className={classes.titleBar}>\n        <div className={classes.corner} />\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.corner}>\n          <Link to=\"/\" className={classes.close}>&times;</Link>\n        </div>\n      </div>\n    )}\n    <div>\n      {children}\n    </div>\n  </div>\n);\n\nexport default injectSheet(style)(Page);\n","import React, { ChangeEvent } from 'react';\nimport { Asset } from '@burner-wallet/assets';\nconst classes = require('./AmountInput.module.css');\n\nconst ONE_ETH = 1000000000000000000;\n\nexport interface AmountInputProps {\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void,\n  asset?: Asset | null,\n  value: string,\n  disabled?: boolean,\n}\n\nconst AmountInput: React.FC<AmountInputProps> = ({ onChange, asset, value, disabled }) => {\n  let isUSD = false;\n  let usdValue;\n  if (!isUSD && asset) {\n    try {\n      isUSD = asset.getUSDValue(ONE_ETH.toString()) === '1.00';\n      usdValue = asset.getUSDValue((parseFloat(value) * ONE_ETH).toString());\n    } catch (e) {}\n  }\n  return (\n    <div>\n      <div className={classes.inputContainer}>\n        {isUSD && <div className={classes.unit}>$</div>}\n        <input\n          type=\"number\"\n          placeholder=\"0.00\"\n          className={classes.input}\n          onChange={onChange}\n          value={value}\n          disabled={disabled}\n          min=\"0\"\n        />\n        {!isUSD && asset && <div className={classes.unit}>{asset.name}</div>}\n      </div>\n      {usdValue && <div>${usdValue} USD</div>}\n    </div>\n  );\n};\n\nexport default AmountInput;\n","import React, { Component } from 'react';\nimport { Asset } from '@burner-wallet/assets';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nconst POLL_INTERVAL = 1000;\nconst CACHE_EXPIRATION = 3000;\n\nconst balanceCache: { [key: string]: { timestamp: number, balance: string } } = {};\nconst getCache = (key: string) => balanceCache[key] && (Date.now() - balanceCache[key].timestamp < CACHE_EXPIRATION)\n  ? balanceCache[key].balance\n  : null;\nconst setCache = (key: string, balance: string) => {\n  balanceCache[key] = { balance, timestamp: Date.now() };\n}\n\nexport interface AccountBalanceProps extends BurnerContext {\n  asset: string | Asset,\n  account?: string,\n  render: (err: Error, data: AccountBalanceData | null) => React.ReactNode,\n}\n\nexport interface AccountBalanceData {\n  balance: string,\n  displayBalance: string,\n  usdBalance: string | null,\n}\n\nclass AccountBalance extends Component<AccountBalanceProps, any> {\n  private timer: any;\n  private _isMounted: boolean;\n\n  constructor(props: BurnerContext & AccountBalanceProps) {\n    super(props);\n    this.state = {\n      data: null,\n      err: null,\n    };\n    this.timer = null;\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchData();\n    this.poll();\n  }\n\n  componentDidUpdate(oldProps: BurnerContext & AccountBalanceProps) {\n    if (this.props !== oldProps) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  poll() {\n    this.timer = setTimeout(async () => {\n      await this.fetchData();\n      this.poll();\n    }, POLL_INTERVAL);\n  }\n\n  getAsset(): Asset {\n    const { asset, assets } = this.props;\n    if (typeof asset !== 'string') {\n      return asset;\n    }\n\n    const assetList = assets.filter(_asset => _asset.id == asset);\n    if (assetList.length == 0) {\n      throw new Error(`Unable to find asset ${asset}`);\n    }\n    return assetList[0];\n  }\n\n  async getBalance(asset: Asset) {\n    const account = this.props.account || this.props.accounts[0];\n    const cacheKey = `${asset.id}-${account}`;\n    const cachedVal = getCache(cacheKey);\n    if (cachedVal) {\n      return cachedVal;\n    }\n\n    const balance = await asset.getBalance(account);\n    setCache(cacheKey, balance);\n    return balance;\n  }\n\n  async fetchData() {\n    try {\n      const asset = this.getAsset();\n      const balance = await this.getBalance(asset);\n\n      if (!this._isMounted) {\n        return;\n      }\n\n      let usdBalance = null;\n      try {\n        usdBalance = asset.getUSDValue(balance);\n      } catch (e) {}\n\n      const data: AccountBalanceData = {\n        balance,\n        displayBalance: asset.getDisplayValue(balance),\n        usdBalance,\n      }\n      this.setState({ data, err: null });\n    } catch (err) {\n      console.warn(err);\n      this.setState({ err, data: null });\n    }\n  }\n\n  render() {\n    return this.props.render(this.state.err, this.state.data);\n  }\n}\n\nexport default withBurner<AccountBalanceProps>(AccountBalance);\n","import React, { Fragment } from 'react';\nimport { Asset } from '@burner-wallet/assets';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nexport interface AssetsProps extends BurnerContext {\n  render: (assets: Asset[]) => React.ReactNode;\n}\n\nconst Assets: React.FC<AssetsProps> = ({ render, assets }) => (\n  <Fragment>{render(assets)}</Fragment>\n);\n\nexport default withBurner<AssetsProps>(Assets);\n","import React, { useState, useEffect } from 'react';\nimport { Asset } from '@burner-wallet/assets';\nimport AccountBalance, { AccountBalanceData } from '../data-providers/AccountBalance';\nimport Assets from '../data-providers/Assets';\nconst classes = require('./AssetSelector.module.css');\n\nconst AssetElement: React.FC<{asset: Asset}> = ({ asset }) => (\n  <div className={classes.assetElement}>\n    <div className={classes.assetName}>{asset.name}</div>\n    <AccountBalance asset={asset} render={(err: Error, data: AccountBalanceData | null) => data && (\n      <div className={classes.assetBalance}>\n        {data.usdBalance ? `$${data.usdBalance}` : data.displayBalance}\n      </div>\n    )} />\n  </div>\n);\n\nexport interface AssetSelectorProps {\n  selected: Asset | null;\n  assets?: Asset[],\n  onChange: (asset: Asset) => void;\n  network?: string;\n  disabled?: boolean;\n}\n\nconst AssetSelector: React.FC<AssetSelectorProps> = ({ selected, assets, onChange, disabled, network }) => {\n  const [isOpen, setOpen] = useState(false);\n\n  useEffect(() => {\n    const clickListener = () => setOpen(false);\n    document.addEventListener('click', clickListener);\n    return () => document.removeEventListener('click', clickListener);\n  });\n\n  const Dropdown = (assets: Asset[]) => {\n    if (!selected) {\n      onChange(assets[0]);\n    }\n    const selectedAsset = assets.filter(asset => asset === selected)[0];\n    return (\n      <div className={classes.selectContainer}>\n        <div onClick={() => setOpen(!isOpen)} className={classes.selectBox}>\n          {selectedAsset && <AssetElement asset={selectedAsset} />}\n        </div>\n        {isOpen && !disabled && (\n          <div className={classes.selectDropdown}>\n            {assets.filter(asset => !network || asset.network === network).map(asset => (\n              <div key={asset.id} className={classes.dropdownItem} onClick={() => {\n                setOpen(false);\n                onChange(asset);\n              }}>\n                <AssetElement asset={asset} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return assets ? Dropdown(assets) : <Assets render={Dropdown} />;\n};\n\nexport default AssetSelector;\n","import React, { MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport Color from 'color';\n\nconst styles = (theme: any) => ({\n  button: {\n    display: 'block',\n    // backgroundImage: 'linear-gradient(rgb(250, 125, 54), rgb(247, 107, 28))',\n    backgroundColor: theme.accentColor,\n    color: Color(theme.accentColor).luminosity() > 0.6 ? '#333333' : '#EEEEEE',\n    lineHeight: 1.5,\n    borderRadius: 4,\n    textDecoration: 'none',\n    padding: '6px 12px',\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  disabled: {\n    // backgroundImage: 'linear-gradient(rgb(189, 143, 117), rgb(176, 127, 99))',\n    backgroundColor: Color(theme.accentColor).desaturate(0.5).hsl().string(),\n    cursor: 'default',\n  },\n})\n\nexport interface ButtonProps {\n  to?: string,\n  onClick?: () => any,\n  disabled?: boolean,\n  className?: string,\n  classes: any,\n}\n\nconst Button:React.FC<ButtonProps> = ({ to, onClick, disabled, children, classes, className }) => {\n  const clickHandler = disabled ? (e: MouseEvent) => e.preventDefault() : onClick;\n\n  const _className = (disabled ? [classes.button, classes.disabled, className] : [classes.button, className]).join(' ');\n\n  if (to) {\n    return (\n      <Link className={_className} to={to} onClick={clickHandler}>\n        {children}\n      </Link>\n    );\n  } else {\n    return (\n      <button className={_className} onClick={clickHandler} disabled={disabled}>\n        {children}\n      </button>\n    );\n  }\n}\n\nexport default injectSheet(styles)(Button);\n","import React, { Component } from 'react';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nconst POLL_INTERVAL = 1000;\n\nexport interface AccountKeysProps {\n  account: string,\n  render: (keys: Keys | null) => React.ReactNode,\n}\n\ninterface Keys {\n  privateKey: string,\n  burnAccount: () => any,\n}\n\nclass AccountKeys extends Component<BurnerContext & AccountKeysProps, any> {\n  constructor(props: BurnerContext & AccountKeysProps) {\n    super(props);\n    this.state = {\n      keys: null,\n    };\n  }\n\n  componentDidMount() {\n    this.updateKeys();\n  }\n\n  componentDidUpdate(oldProps: BurnerContext & AccountKeysProps) {\n    if (this.props !== oldProps) {\n      this.updateKeys();\n    }\n  }\n\n  updateKeys() {\n    const { account, accounts, actions } = this.props;\n    if (accounts.indexOf(account) === -1 || !actions.canCallSigner('readKey', account)) {\n      this.setState({ keys: null });\n      return\n    }\n\n    const keys = {\n      privateKey: actions.callSigner('readKey', account),\n      burnAccount: () => actions.callSigner('burn', account),\n    }\n    this.setState({ keys })\n  }\n\n  render() {\n    return this.props.render(this.state.keys);\n  }\n}\n\nexport default withBurner(AccountKeys);\n","import React, { Component } from 'react';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nexport interface TransactionDetailsProps {\n  asset: string,\n  txHash: string,\n  render: (err: Error, tx: any) => React.ReactNode,\n}\n\ninterface Transaction {\n  txHash: string,\n  from: string,\n  to: string,\n  value: string,\n  displayValue: string,\n}\n\nclass TransactionDetails extends Component<BurnerContext & TransactionDetailsProps, any> {\n  constructor(props: BurnerContext & TransactionDetailsProps) {\n    super(props);\n    this.state = {\n      tx: null,\n      err: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(oldProps: BurnerContext & TransactionDetailsProps) {\n    if (this.props !== oldProps) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    try {\n      const assetList = this.props.assets.filter(asset => asset.id == this.props.asset);\n      if (assetList.length == 0) {\n        throw new Error(`Unable to find asset ${this.props.asset}`);\n      }\n      const asset = assetList[0];\n\n      const tx = await asset.getTx(this.props.txHash);\n      this.setState({ tx, err: null });\n    } catch (err) {\n      this.setState({ err, tx: null });\n    }\n  }\n\n  render() {\n    return this.props.render(this.state.err, this.state.tx);\n  }\n}\n\nexport default withBurner(TransactionDetails);\n","import { ComponentType } from 'react';\nimport QRCode from 'qrcode.react';\n\nimport Page, { PageProps } from './Page';\nimport AmountInput, { AmountInputProps } from './AmountInput';\nimport AssetSelector, { AssetSelectorProps } from './AssetSelector';\nimport Button, { ButtonProps } from './Button';\n\nimport AccountBalance, { AccountBalanceProps } from '../data-providers/AccountBalance';\nimport AccountKeys, { AccountKeysProps } from '../data-providers/AccountKeys';\nimport Assets, { AssetsProps } from '../data-providers/Assets';\nimport TransactionDetails, { TransactionDetailsProps } from '../data-providers/TransactionDetails';\n\nexport interface BurnerComponents {\n  Page: ComponentType<PageProps>,\n  AssetSelector: ComponentType<AssetSelectorProps>,\n  AmountInput: ComponentType<AmountInputProps>,\n  Button: ComponentType<ButtonProps>,\n\n  AccountBalance: ComponentType<AccountBalanceProps>,\n  AccountKeys: ComponentType<AccountKeysProps>,\n  Assets: ComponentType<AssetsProps>,\n  TransactionDetails: ComponentType<TransactionDetailsProps>,\n\n  QRCode: QRCode.QRCode,\n};\n\nexport default {\n  Page, AssetSelector, AmountInput, Button,\n  AccountBalance, AccountKeys, Assets, TransactionDetails,\n  QRCode,\n} as BurnerComponents;\n","import React from 'react';\nimport injectSheet from 'react-jss';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nconst styles = (theme: any) => ({\n  header: {\n    display: 'flex',\n    color: 'white',\n    height: 64,\n    alignItems: 'center',\n  },\n  titleContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  title: {\n    fontSize: 24,\n    fontFamily: theme.titleFont,\n  },\n  subtitle: {\n    fontSize: 12,\n  },\n  spacer: {\n    flex: '1 0',\n  },\n  headerAccount: {\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n  },\n});\n\ninterface HeaderProps extends BurnerContext {\n  title?: string,\n  classes: any,\n}\n\nconst Header: React.FC<HeaderProps> = ({ accounts, title, classes, actions }) => (\n  <header className={classes.header}>\n    <div className={classes.titleContainer}>\n      <div className={classes.title}>{title}</div>\n      {title !== 'Burner Wallet' && (\n        <div className={classes.subtitle}>Powered by Burner Wallet</div>\n      )}\n    </div>\n    <div className={classes.spacer}/>\n    <div className={classes.headerAccount} onClick={() => actions.navigateTo('/receive')}>\n      {accounts.length > 0 && accounts[0].substr(2, 8)}\n    </div>\n  </header>\n);\n\nHeader.defaultProps = {\n  title: 'Burner Wallet',\n};\n\nexport default injectSheet(styles)(withBurner(Header));\n","import React, { useRef, useState, Fragment } from 'react';\nimport injectSheet from 'react-jss';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nconst style = (theme: any) => ({\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    background: 'rgba(0, 0, 0, 0.5)',\n    padding: 15,\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 100,\n\n    alignItems: 'center',\n    color: 'white',\n    justifyContent: 'center',\n    fontSize: 32,\n  },\n});\n\nconst Loading: React.FC<BurnerContext & { classes: any }> = ({ classes, loading }) => {\n  if (!loading) {\n    return null;\n  }\n\n  return (\n    <div className={classes.overlay}>\n      {loading}\n    </div>\n  );\n};\n\nexport default injectSheet(style)(withBurner(Loading));\n","import React, { useRef, useState, Fragment } from 'react';\nimport injectSheet from 'react-jss';\nimport QrReader from 'react-qr-reader';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\n\nconst style = (theme: any) => ({\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    background: 'rgba(0, 0, 0, 0.5)',\n    padding: 15,\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 100,\n  },\n  instruction: {\n    textAlign: 'center',\n    color: '#EEEEEE',\n    fontSize: 16,\n    marginTop: 16,\n  },\n  cameraIconContainer: {\n    display: 'flex',\n    height: 100,\n  },\n  cameraIcon: {\n    flex: 1,\n  },\n  readerContainer: {\n    overflow: 'hidden',\n  },\n  reader: {\n    flex: '1 0',\n  },\n});\n\nconst Scanner: React.FC<BurnerContext & { classes: any }> = ({ children, completeScan, classes }) => {\n  const reader = useRef<any>(null);\n  const [fallback, setFallback] = useState(false);\n\n  if (!completeScan) {\n    return null;\n  }\n\n  return (\n    <div className={classes.overlay}>\n      <button type=\"button\" onClick={() => completeScan(null)}>Close</button>\n\n      {fallback && (\n        <Fragment>\n          <div className={classes.instruction}>Take a photo of a QR code</div>\n          <div className={classes.cameraIconContainer} onClick={() => reader.current!.openImageDialog()}>\n            <svg className={classes.cameraIcon} viewBox=\"0 0 24 24\">\n              <path fill=\"#ffffff\" d=\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\" />\n            </svg>\n          </div>\n        </Fragment>\n      )}\n\n      <div className={classes.readerContainer}>\n        <QrReader\n          delay={300}\n          ref={reader}\n          legacyMode={fallback}\n          className={classes.reader}\n          onError={err => {\n            console.error(err);\n            setFallback(true);\n          }}\n          onScan={address => {\n            if (address) {\n              completeScan(address);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default injectSheet(style)(withBurner(Scanner));\n","import React, { Fragment, ComponentType } from 'react';\nimport { PluginElementData } from '../Plugins';\nimport { withBurner, BurnerContext } from '../BurnerProvider';\nimport { Plugin, PluginElementContext } from '../';\n\nexport interface PluginElementsProps  {\n  position: string,\n}\n\nconst PluginElements: React.FC<PluginElementsProps & BurnerContext> = ({ position, pluginData, ...props }) => {\n  const elements = pluginData.elements[position];\n  if (!elements || elements.length === 0) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {elements.map(({ Component, plugin }: PluginElementData, i: number) => (\n        <Component key={i} plugin={plugin} {...props} />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default withBurner<PluginElementsProps & BurnerContext>(PluginElements);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\nimport { BurnerContext, withBurner } from '../../BurnerProvider';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport PluginElements from '../../components/PluginElements';\nimport AccountKeys from '../../data-providers/AccountKeys';\n\ninterface SectionProps {\n  title: string,\n  children:  React.ReactNode,\n}\n\nconst Section: React.FC<SectionProps> = ({ title, children }) => (\n  <div>\n    <h3>{title}</h3>\n    {children}\n  </div>\n)\n\nconst AdvancedPage: React.FC<BurnerContext> = ({ accounts }) => {\n  const [showPk, setShowPk] = React.useState(false);\n  return (\n    <Page title=\"Advanced\">\n      <AccountKeys\n        account={accounts[0]}\n        render={keys => keys && (\n          <Section title=\"Private Key\">\n            <div style={{ display: 'flex' }}>\n              <Button onClick={() => setShowPk(!showPk)}>\n                {showPk ? 'Hide' : 'Show'} PK\n              </Button>\n              <Button onClick={() => navigator.clipboard.writeText(keys.privateKey)}>\n                Copy PK\n              </Button>\n            </div>\n\n            {showPk && (\n              <div>\n                <div><QRCode value={keys.privateKey} renderAs=\"svg\" /></div>\n                <div><input value={keys.privateKey} readOnly /></div>\n              </div>\n            )}\n\n            <div>\n              <Button onClick={keys.burnAccount}>Burn PK</Button>\n            </div>\n          </Section>\n        )}\n      />\n\n      <PluginElements position=\"advanced\" />\n    </Page>\n  );\n};\n\nexport default withBurner(AdvancedPage);\n","import AdvancedPage from './AdvancedPage';\nexport default AdvancedPage;\n","import React from 'react';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  line: {\n    padding: '4px 0',\n    margin: '4px 0',\n    borderBottom: 'solid 1px #CCCCCC',\n  },\n  lineName: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  lineValue: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\ninterface LineItemProps {\n  name: string,\n  value: string,\n  classes: any,\n}\n\nconst LineItem: React.FC<LineItemProps> = ({ name, value, classes }) => (\n  <div className={classes.line}>\n    <div className={classes.lineName}>{name}</div>\n    <div className={classes.lineValue}>{value}</div>\n  </div>\n);\n\nexport default injectSheet(styles)(LineItem);\n","import ConfirmPage from './ConfirmPage';\nexport default ConfirmPage;\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BurnerContext, withBurner } from '../../BurnerProvider';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport LineItem from '../../components/LineItem';\n\nconst ConfirmPage: React.FC<BurnerContext & RouteComponentProps> = ({ history, assets, actions }) => {\n  if (!history.location.state) {\n    history.replace('/send');\n    return null;\n  }\n\n  const [sending, setSending] = useState(false);\n\n  const { to, from, ether, asset, message } = history.location.state;\n  const [_asset] = assets.filter(a => a.id === asset);\n\n  const send = async () => {\n    setSending(true);\n    try {\n      actions.setLoading('Sending...');\n      const receipt = await _asset.send({ from, to, ether, message });\n      actions.setLoading(null);\n      history.push(`/receipt/${_asset.id}/${receipt.transactionHash}`);\n    } catch (err) {\n      setSending(false);\n      console.error(err);\n    }\n  };\n\n  return (\n    <Page title=\"Confirm\">\n      <LineItem name=\"From\" value={from} />\n      <LineItem name=\"To\" value={to} />\n      <LineItem name=\"Amount\" value={`${ether} ${_asset.name}`} />\n      {message && <LineItem name=\"Message\" value={message} />}\n\n      <div style={{ display: 'flex' }}>\n        <Button disabled={sending} onClick={send}>Send</Button>\n        <Button disabled={sending} onClick={() => history.goBack()}>Cancel</Button>\n      </div>\n    </Page>\n  );\n};\n\nexport default withBurner(ConfirmPage);\n","import React, { Component, ComponentType } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport HistoryEvent from '@burner-wallet/core/HistoryEvent';\nimport { Diff } from './';\n\ninterface HistoryProviderProps {\n  core: any,\n}\n\ntype HistoryEventCallback = (event: HistoryEvent) => void;\n\ninterface HistoryFns {\n  getHistoryEvents: (options: any) => HistoryEvent[],\n  onHistoryEvent: (callback: HistoryEventCallback) => void,\n  removeHistoryEventListener: (callback: HistoryEventCallback) => void,\n}\n\nexport interface HistoryContext {\n  historyFns: HistoryFns,\n}\n\nconst unavailable = () => { throw new Error('Unavailable') };\nconst { Provider, Consumer } = React.createContext<HistoryContext>({\n  historyFns: {\n    getHistoryEvents: () => { throw new Error('Not Ready') },\n    onHistoryEvent: () => { throw new Error('Not Ready') },\n    removeHistoryEventListener: () => { throw new Error('Not Ready') },\n  },\n});\n\nexport default class HistoryProvider extends Component<HistoryProviderProps, any> {\n  private historyFns: HistoryFns;\n\n  constructor(props: HistoryProviderProps) {\n    super(props);\n    this.historyFns = {\n      getHistoryEvents: (options: any) => props.core.getHistoryEvents(options),\n      onHistoryEvent: (cb: HistoryEventCallback) => props.core.onHistoryEvent(cb),\n      removeHistoryEventListener: (cb: HistoryEventCallback) =>\n        props.core.removeHistoryEventListener(cb),\n    };\n  }\n\n  render() {\n    return (\n      <Provider value={{ historyFns: this.historyFns }}>\n        {this.props.children}\n      </Provider>\n    )\n  }\n}\n\nexport function withHistory<P>(WrappedComponent: ComponentType<P>): ComponentType<Diff<P, HistoryContext>> {\n  return function(props) {\n    return (\n      <Consumer>\n        {(burnerContext: HistoryContext) => <WrappedComponent {...burnerContext} {...props as P} />}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component, useState, useEffect, Fragment } from 'react';\nimport HistoryEvent from '@burner-wallet/core/HistoryEvent';\nimport { withHistory, HistoryContext } from '../HistoryProvider';\n\ninterface HistoryProps extends HistoryContext {\n  account: string,\n  render: (events: HistoryEvent[]) => React.ReactNode,\n}\n\ninterface HistoryState {\n  events: HistoryEvent[],\n}\n\nclass History extends Component<HistoryProps, HistoryState> {\n  private onHistoryEventCallback: (event: HistoryEvent) => void;\n\n  constructor(props: HistoryProps) {\n    super(props);\n    this.state = {\n      events: [],\n    };\n\n    this.onHistoryEventCallback = (event: HistoryEvent) => {\n      const { account } = this.props;\n      if (event.to === account || event.from === account) {\n        this.setState({\n          events: [event, ...this.state.events],\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { account, historyFns } = this.props;\n    this.setState({\n      events: [...historyFns.getHistoryEvents({ account })],\n    });\n\n    historyFns.onHistoryEvent(this.onHistoryEventCallback);\n  }\n\n  componentWillUnmount() {\n    this.props.historyFns.removeHistoryEventListener(this.onHistoryEventCallback);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.props.render(this.state.events)}\n      </Fragment>\n    );\n  }\n}\n\nexport default withHistory(History);\n","export const SCAN_QR_DATAURI = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='width:24px;height:24px' viewBox='0 0 24 24'%3E%3Cpath fill='%23000000' d='M4,4H10V10H4V4M20,4V10H14V4H20M14,15H16V13H14V11H16V13H18V11H20V13H18V15H20V18H18V20H16V18H13V20H11V16H14V15M16,15V18H18V15H16M4,20V14H10V20H4M6,6V8H8V6H6M16,6V8H18V6H16M6,16V18H8V16H6M4,11H6V13H4V11M9,11H13V15H11V13H9V11M11,6H13V10H11V6M2,2V6H0V2A2,2 0 0,1 2,0H6V2H2M22,0A2,2 0 0,1 24,2V6H22V2H18V0H22M2,18V22H6V24H2A2,2 0 0,1 0,22V18H2M22,22V18H24V22A2,2 0 0,1 22,24H18V22H22Z' /%3E%3C/svg%3E`;\n","import React from 'react';\nimport { Asset } from '@burner-wallet/assets';\nconst classes = require('./BalanceRow.module.css');\n\ninterface BalanceRowProps {\n  asset: Asset,\n  usdBalance?: string | null,\n  balance?: string | null,\n}\n\nconst BalanceRow: React.FC<BalanceRowProps> = ({ asset, usdBalance, balance }) => (\n  <li className={classes.balanceRow}>\n    <div className={classes.assetName}>{asset.name}</div>\n    <div className={classes.assetBalance}>\n      {!(usdBalance || balance) && '-'}\n      {usdBalance ? `$${usdBalance}` : balance}\n    </div>\n  </li>\n);\n\nexport default BalanceRow;\n","import React, { Fragment } from 'react';\nimport injectSheet from 'react-jss';\nimport { Asset } from '@burner-wallet/assets';\nimport HistoryEvent from '@burner-wallet/core/HistoryEvent';\nimport PluginElements, { PluginElementsProps } from '../../components/PluginElements';\n\nconst HistoryPluginElements = PluginElements as React.FC<PluginElementsProps & { event: HistoryEvent }>;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    background: '#d9d9d9',\n    padding: 6,\n    borderRadius: 12,\n    margin: '4px 0',\n    alignItems: 'center',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  address: {\n    fontFamily: 'monospace',\n    margin: '0 4px',\n  },\n  value: {\n    whiteSpace: 'nowrap',\n  },\n  details: {\n    flex: '1 0',\n    overflow: 'hidden',\n  },\n  mainDetail: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  type: {\n    minWidth: 64,\n    fontSize: 18,\n    marginRight: 12,\n  },\n  subDetail: {\n    fontSize: 14,\n  },\n};\n\ninterface HistoryListEventProps {\n  event: HistoryEvent,\n  account?: string,\n  classes: any,\n  navigateTo: (path: string) => void,\n}\n\nconst HistoryListEvent: React.FC<HistoryListEventProps> = ({ event, account, classes, navigateTo }) => {\n  const asset = event.getAsset();\n  if (!asset) {\n    console.warn(`Could not find asset ${event.asset}`)\n    return null;\n  }\n\n  let type;\n  let main;\n  let onClick;\n  let subDetail = null;\n  switch (event.type) {\n    case 'send':\n      const isReceive = event.to === account;\n      type = isReceive ? 'Receive' : 'Send';\n      main = (\n        <Fragment>\n          {isReceive ? 'From: ' : 'To: '}\n          <span className={classes.address} title={isReceive ? event.from : event.to}>\n            {isReceive ? event.from : event.to}\n          </span>\n        </Fragment>\n      );\n      if (event.message && event.message.length > 0) {\n        subDetail = event.message;\n      }\n      onClick = () => navigateTo(`/receipt/${asset.id}/${event.tx}`);\n      break;\n    case 'exchange':\n      type = 'Exchange';\n      break\n    default:\n      console.warn('Unknown event type', event.type);\n  }\n\n  return (\n    <div className={classes.container} onClick={onClick}>\n      <div className={classes.type}>{type}</div>\n      <div className={classes.details}>\n        <div className={classes.mainDetail}>{main}</div>\n        {subDetail && (\n          <div className={classes.subDetail}>{subDetail}</div>\n        )}\n      </div>\n      <div className={classes.value}>{asset.getDisplayValue(event.value)} {asset.name}</div>\n      <HistoryPluginElements position=\"history-event\" event={event} />\n    </div>\n  );\n}\n\nexport default injectSheet(styles)(HistoryListEvent);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport Color from 'color';\n\nimport { BurnerContext, withBurner } from '../../BurnerProvider';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport PluginElements from '../../components/PluginElements';\nimport AccountBalance, { AccountBalanceData } from '../../data-providers/AccountBalance';\nimport History from '../../data-providers/History';\nimport { SCAN_QR_DATAURI } from '../../constants';\nimport BalanceRow from './BalanceRow';\nimport HistoryListEvent from './HistoryListEvent';\n\nconst styles = (theme: any) => ({\n  balances: {\n    padding: 0,\n  },\n  buttons: {\n    display: 'flex',\n    padding: 0,\n    flexWrap: 'wrap',\n  },\n  buttonContainer: {\n    display: 'block',\n    width: '50%',\n    padding: 4,\n    boxSizing: 'border-box',\n    flex: '0 0 50%',\n  },\n  homeButton: {\n    backgroundColor: theme.homeButtonColor,\n  },\n  scanBtn: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    height: 60,\n    width: 60,\n    borderRadius: 100,\n    backgroundImage: `url(\"${SCAN_QR_DATAURI}\")`,\n    backgroundSize: '60%',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundColor: Color(theme.accentColor).lighten(0.2).hsl().string(),\n  },\n  advancedLink: {\n    color: Color(theme.paperBackground).isLight() ? '#333333' : '#cccccc',\n  },\n});\n\ninterface HomeButtonProps {\n  path: string,\n  title: string,\n  classes: any,\n}\n\nconst HomeButton: React.FC<HomeButtonProps> = ({ path, title, classes }) => (\n  <li className={classes.buttonContainer}>\n    <Button to={path} className={classes.homeButton}>{title}</Button>\n  </li>\n)\n\nconst ADDRESS_REGEX = /^(?:0x)?[0-9a-f]{40}$/i;\nconst PK_REGEX = /^(?:0x)?[0-9a-f]{64}$/i;\n\nconst HomePage: React.FC<BurnerContext & { classes: any }> = ({ accounts, actions, assets, pluginData, classes }) => (\n  <Page>\n    <button className={classes.scanBtn} onClick={async () => {\n      try {\n        const result = await actions.scanQrCode();\n        if (pluginData.tryHandleQR(result, { actions })) {\n          return;\n        } else if (ADDRESS_REGEX.test(result)) {\n          actions.navigateTo('/send', { address: result });\n        } else if (PK_REGEX.test(result)) {\n          actions.callSigner('writeKey', accounts[0], result);\n        } else if (result.indexOf(location.origin) === 0) {\n          actions.navigateTo(result.substr(location.origin.length));\n        }\n      } catch (e) {}\n    }} />\n\n    <PluginElements position=\"home-top\" />\n\n    {accounts.length > 0 ? (\n      <ul className={classes.balances}>\n        {assets.map(asset =>\n          <AccountBalance\n            key={asset.id}\n            asset={asset.id}\n            account={accounts[0]}\n            render={(err: Error, data: AccountBalanceData | null) => (\n              <BalanceRow\n                asset={asset}\n                usdBalance={data && data.usdBalance}\n                balance={data && data.displayBalance}\n              />\n            )}\n          />\n        )}\n      </ul>\n    )  : 'Loading'}\n\n    <PluginElements position=\"home-middle\" />\n\n    <ul className={classes.buttons}>\n      <HomeButton path=\"/receive\" title=\"Receive\" classes={classes} />\n      <HomeButton path=\"/send\" title=\"Send\" classes={classes} />\n      {pluginData.homeButtons.map(({ title, path }) => (\n        <HomeButton title={title} path={path} key={title} classes={classes} />\n      ))}\n    </ul>\n\n    {accounts.length > 0 && (\n      <History\n        account={accounts[0]}\n        render={(events: any[]) => events.map(event => (\n          <HistoryListEvent\n            key={JSON.stringify(event)}\n            event={event}\n            account={accounts[0]}\n            navigateTo={actions.navigateTo}\n          />\n        ))}\n      />\n    )}\n\n    <PluginElements position=\"home-bottom\" />\n\n    <Link to=\"/advanced\" className={classes.advancedLink}>Advanced</Link>\n  </Page>\n);\n\nexport default injectSheet(styles)(withBurner(HomePage));\n","import HomePage from './HomePage';\nexport default HomePage;\n","import ReceiptPage from './ReceiptPage';\nexport default ReceiptPage;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\nimport Page from '../../components/Page';\nimport LineItem from '../../components/LineItem';\nimport TransactionDetails from '../../data-providers/TransactionDetails';\n\ninterface MatchParams {\n  asset: string;\n  txHash: string;\n}\n\nconst ReceiptPage: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => (\n  <Page title=\"Receipt\">\n    <TransactionDetails\n      asset={match.params.asset}\n      txHash={match.params.txHash}\n      render={(err, tx) => {\n        if (err) {\n          return `Error: ${err.message}`;\n        }\n        if (!err && !tx) {\n          return 'Loading...';\n        }\n\n        return (\n          <div>\n            <LineItem name=\"From\" value={tx.from} />\n            <LineItem name=\"To\" value={tx.to} />\n            <LineItem name=\"Amount\" value={`${tx.displayValue} ${tx.assetName}`} />\n            {tx.message && <LineItem name=\"Message\" value={tx.message} />}\n          </div>\n        )\n      }}\n    />\n  </Page>\n);\n\nexport default ReceiptPage;\n","import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { BurnerContext, withBurner } from '../../BurnerProvider';\nimport Page from '../../components/Page';\nconst classes = require('./ReceivePage.module.css');\n\nconst ReceivePage: React.FC<BurnerContext> = ({ accounts }) => {\n  const [showCopied, setShowCopied] = useState(false);\n  return (\n    <Page title=\"Receive\">\n      {accounts.length > 0 && (\n        <>\n          <div className={classes.qrContainer}>\n            <QRCode value={accounts[0]} renderAs=\"svg\" />\n          </div>\n          <div className={classes.addressContainer}>\n            <input\n              value={accounts[0]}\n              readOnly\n              className={classes.address}\n              onClick={() => {\n                navigator.clipboard.writeText(accounts[0]);\n                setShowCopied(true);\n                setTimeout(() => setShowCopied(false), 5000);\n              }}\n            />\n          </div>\n          <div className={showCopied ? classes.copied : classes.copyHidden}>\n            Address copied to clipboard\n          </div>\n        </>\n      )}\n    </Page>\n  );\n};\n\nexport default withBurner(ReceivePage);\n","import ReceivePage from './ReceivePage';\nexport default ReceivePage;\n","import React from 'react';\nimport { Account } from '../';\nconst classes = require('./AddressInputAccount.module.css');\n\nconst AddressInputAccount: React.FC<{account: Account}> = ({ account }) => (\n  <div className={classes.account}>\n    {account.picture && (\n      <div className={classes.avatar} style={{ backgroundImage: `url(${account.picture})` }} />\n    )}\n    <div className={classes.names}>\n      <div className={classes.title}>{account.name || account.address}</div>\n      {account.name && <div className={classes.subtitle}>{account.address}</div>}\n    </div>\n  </div>\n);\n\nexport default AddressInputAccount;\n","import React, { Fragment } from 'react';\nimport injectSheet from 'react-jss';\nimport { Account } from '../';\nimport AddressInputAccount from './AddressInputAccount';\nimport { SCAN_QR_DATAURI } from '../constants';\n\nconst ADDRESS_REGEX = /^(0x)?[0-9a-f]{40}$/i;\n\nconst styles = {\n  inputContainer: {\n    border: 'solid 1px #CCCCCC',\n    borderRadius: 4,\n    display: 'flex',\n    padding: 1,\n    height: 40,\n  },\n  textField: {\n    border: 'none',\n    flex: '1 0',\n    fontSize: 16,\n    padding: 4,\n  },\n  scanBtn: {\n    backgroundImage: `url(\"${SCAN_QR_DATAURI}\")`,\n    width: 40,\n    height: 40\n  },\n  clearBtn: {\n    width: 40,\n  },\n};\n\ninterface AddressInputFieldProps {\n  value: string,\n  account?: Account | null,\n  onChange: (address: string, account: Account | null) => void,\n  scan?: () => any,\n  disabled?: boolean,\n  classes: any,\n}\n\nconst AddressInputField: React.FC<AddressInputFieldProps> = ({\n  value, account, onChange, scan, disabled, classes\n}) => {\n  let _account = account;\n  if (!account && ADDRESS_REGEX.test(value)) {\n    _account = { address: value };\n  }\n  return (\n    <div className={classes.inputContainer}>\n      {_account ? (\n        <Fragment>\n          <AddressInputAccount account={_account} />\n          <button onClick={() => onChange('', null)} className={classes.clearBtn}>{'\\u00D7'}</button>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <input\n            className={classes.textField}\n            value={value}\n            onChange={e => onChange(e.target.value, null)}\n          />\n          {scan && <button className={classes.scanBtn} onClick={scan} />}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default injectSheet(styles)(AddressInputField);\n","import React from 'react';\nimport { Account } from '../';\nimport AddressInputAccount from './AddressInputAccount';\nconst classes = require('./AddressInputSearchResults.module.css');\n\ninterface AddressInputSearchResultsProps {\n  accounts: Account[],\n  onSelect: (account: Account) => void,\n}\n\nconst AddressInputSearchResults: React.FC<AddressInputSearchResultsProps> = ({ accounts, onSelect }) => (\n  <div className={classes.results}>\n    <ul className={classes.list}>\n      {accounts.map(account => (\n        <li\n          className={`${classes.listElement} ${account.address ? classes.enabled : ''}`}\n          onClick={() => account.address && onSelect(account)}\n          key={account.address || account.name}\n        >\n          <AddressInputAccount account={account}/>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default AddressInputSearchResults;\n","import React, { Component, Fragment } from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport { Asset } from '@burner-wallet/assets';\nimport { BurnerContext, withBurner } from '../../BurnerProvider';\nimport { Account } from '../../';\nimport AddressInputField from '../../components/AddressInputField';\nimport AddressInputSearchResults from '../../components/AddressInputSearchResults';\nimport AssetSelector from '../../components/AssetSelector';\nimport AmountInput from '../../components/AmountInput';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\n\ninterface SendPageState {\n  to: string,\n  value: string,\n  asset: Asset | null,\n  sending: boolean,\n  txHash: string | null,\n  account: Account | null,\n  accounts: Account[],\n  message: string,\n}\n\ntype SendPageProps = BurnerContext & RouteComponentProps & { classes: any };\n\nconst styles = {\n  messageField: {\n    width: '100%',\n    padding: 4,\n    fontSize: 16,\n    background: '#EEEEEE',\n    height: 40,\n    boxSizing: 'border-box',\n    border: 'solid 1px #cccccc',\n    borderRadius: 4,\n  },\n  sendContainer: {\n    marginTop: 16,\n  },\n};\n\nclass SendPage extends Component<SendPageProps, SendPageState> {\n  constructor(props: SendPageProps) {\n    super(props);\n    this.state = {\n      to: props.location.state && props.location.state.address || '',\n      value: '',\n      message: '',\n      asset: null,\n      sending: false,\n      txHash: null,\n      account: null,\n      accounts: [],\n    };\n  }\n\n  async getAccounts(search: string) {\n    const { pluginData } = this.props;\n    const _accounts = await Promise.all(pluginData.accountSearches.map(searchFn => searchFn(search)));\n    const accounts = Array.prototype.concat(..._accounts);\n    this.setState({ accounts });\n  }\n\n  async scanCode() {\n    try {\n      const address = await this.props.actions.scanQrCode();\n      this.setState({ to: address });\n    } catch (e) {}\n  }\n\n  send() {\n    const { asset, to, value, message } = this.state;\n    const { accounts, actions } = this.props;\n    if (!asset) {\n      throw new Error('Asset not selected');\n    }\n    actions.send({\n      from: accounts[0],\n      to,\n      ether: value,\n      asset: asset.id,\n      message: message.length > 0 ? message : null,\n    });\n  }\n\n  render() {\n    const { to, value, asset, sending, txHash, account, accounts, message } = this.state;\n    const { actions, classes } = this.props;\n\n    if (txHash && asset) {\n      return (\n        <Redirect to={`/receipt/${asset.id}/${txHash}`} />\n      )\n    }\n\n    const canSend = asset !== null && !sending && to.length == 42 && to;\n    return (\n      <Page title=\"Send To Address\">\n        <AssetSelector selected={asset} onChange={newAsset => this.setState({ asset: newAsset })} disabled={sending} />\n        <div>To address:</div>\n        <AddressInputField\n          value={to}\n          account={account}\n          onChange={(to: string, account: Account | null) => {\n            this.setState({ to, account });\n            if (account) {\n              this.setState({ accounts: [] });\n            } else {\n              this.getAccounts(to);\n            }\n          }}\n          scan={() => this.scanCode()}\n          disabled={sending}\n        />\n        <AddressInputSearchResults\n          accounts={accounts}\n          onSelect={(account: Account) => this.setState({ account, accounts: [] })}\n        />\n\n        <div>Send Amount:</div>\n        <AmountInput\n          asset={asset}\n          value={value}\n          onChange={e => this.setState({ value: e.target.value })}\n          disabled={sending}\n        />\n\n        {asset && asset.supportsMessages() && (\n          <Fragment>\n            <div>Message:</div>\n            <input\n              value={message}\n              onChange={e => this.setState({ message: e.target.value })}\n              className={classes.messageField}\n            />\n          </Fragment>\n        )}\n\n        <div className={classes.sendContainer}>\n          <Button onClick={() => this.send()} disabled={!canSend}>Send</Button>\n        </div>\n      </Page>\n    );\n  }\n}\n\nexport default injectSheet(styles)(withBurner(SendPage));\n","import SendPage from './SendPage';\nexport default SendPage;\n","import Pages from './Pages';\nexport default Pages;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { BurnerPluginData } from '../Plugins';\nimport AdvancedPage from './AdvancedPage';\nimport ConfirmPage from './ConfirmPage';\nimport HomePage from './HomePage';\nimport ReceiptPage from './ReceiptPage';\nimport ReceivePage from './ReceivePage';\nimport SendPage from './SendPage';\n\ninterface PageProps {\n  pluginData: BurnerPluginData,\n}\n\nconst Pages: React.FC<PageProps> = ({ pluginData }) => (\n  <Switch>\n    <Route path=\"/\" exact component={HomePage} />\n    <Route path=\"/receive\" component={ReceivePage} />\n    <Route path=\"/send\" component={SendPage} />\n    <Route path=\"/confirm\" component={ConfirmPage} />\n    <Route path=\"/receipt/:asset/:txHash\" component={ReceiptPage} />\n    <Route path=\"/advanced\" component={AdvancedPage} />\n    {pluginData.pages.map(({ path, Component, plugin }) => (\n      <Route path={path} key={path} render={(props) => (\n        <Component plugin={plugin} {...props} />\n      )} />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nexport default Pages;\n","import React from 'react';\nimport jss from 'jss';\nimport injectSheet, { ThemeProvider } from 'react-jss';\n\nconst defaultTheme = {\n  background: '#975422',\n  font: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n  titleFont: null,\n  accentColor: '#f76b1c',\n  paperBackground: '#f2f2f2',\n  homeButtonColor: null,\n};\n\nconst styles = (theme: any) => ({\n  '@global': {\n    body: {\n      backgroundImage: theme.background === defaultTheme.background ? 'linear-gradient(#553319, #ca6e28)' : '',\n      backgroundColor: theme.background,\n      backgroundAttachment: 'fixed',\n      fontFamily: theme.font,\n      height: '100%',\n      width: '100%',\n      margin: 0,\n      fontSmoothing: 'antialiased',\n    },\n    html: {\n      height: '100%',\n      width: '100%',\n    },\n    '#root': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  },\n  container: {\n    maxWidth: 740,\n    width: '100%',\n    padding: '0 8px',\n    boxSizing: 'border-box',\n  },\n});\n\nconst Container: React.FC<{ classes: any }> = ({ children, classes }) => (\n  <div className={classes.container}>\n    {children}\n  </div>\n);\n\nconst WrappedContainer = injectSheet(styles)(Container);\n\nconst Template: React.FC<{ theme: any }> = ({ children, theme }) => {\n  return (\n    <ThemeProvider theme={{ ...defaultTheme, ...theme }}>\n      <WrappedContainer>\n        {children}\n      </WrappedContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default Template;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Asset } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport burnerComponents from './components/burnerComponents';\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport Scanner from './components/Scanner';\nimport BurnerProvider from './BurnerProvider';\nimport Pages from './Pages';\nimport Template from './Template';\nimport HistoryProvider from './HistoryProvider';\nimport Plugins from './Plugins';\nimport { Plugin } from './';\n\ninterface BurnerUIProps {\n  core: BurnerCore,\n  plugins?: any[],\n  title?: string,\n  theme?: any,\n}\n\nexport default class BurnerUI extends Component<BurnerUIProps, any> {\n  private plugins: Plugins;\n\n  static defaultProps = {\n    plugins: [],\n  }\n\n  constructor(props: BurnerUIProps) {\n    super(props);\n    this.plugins = new Plugins(props.plugins as Plugin[], this);\n\n    this.state = {\n      pluginData: this.plugins.getData(),\n    };\n  }\n\n  componentDidMount() {\n    this.plugins.onDataChange(pluginData => this.setState({ pluginData }));\n  }\n\n  getCore() {\n    return this.props.core;\n  }\n\n  getAssets(): Asset[] {\n    return this.props.core.getAssets();\n  }\n\n  render() {\n    return (\n      <Router>\n        <BurnerProvider\n          core={this.props.core}\n          pluginData={this.state.pluginData}\n          burnerComponents={burnerComponents}\n        >\n          <HistoryProvider core={this.props.core}>\n            <Template theme={this.props.theme}>\n              <Loading />\n              <Scanner />\n              <Header title={this.props.title} />\n              <Pages pluginData={this.state.pluginData} />\n            </Template>\n          </HistoryProvider>\n        </BurnerProvider>\n      </Router>\n    );\n  }\n}\n","import { ComponentType } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BurnerContext } from './BurnerProvider';\nimport { BurnerPluginContext } from './Plugins';\nimport BurnerUI from './BurnerUI';\n\nexport type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\nexport type Diff<T, K> = Omit<T, keyof K>;\n\nexport type BurnerUI = BurnerUI;\nexport type BurnerContext = BurnerContext;\nexport type BurnerPluginContext = BurnerPluginContext;\n\nexport interface Plugin {\n  initializePlugin(context: BurnerPluginContext): void;\n}\n\nexport interface BasePluginContext {\n  plugin: Plugin;\n}\n\nexport type PluginPageContext = RouteComponentProps & BasePluginContext & BurnerContext;\nexport type PluginElementContext = BasePluginContext & BurnerContext;\n\nexport type PluginPage = ComponentType<PluginPageContext>;\nexport type PluginElement = ComponentType<PluginElementContext>;\n\nexport interface Account {\n  name?: string,\n  address: string,\n  picture?: string,\n}\n\nexport default BurnerUI;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { xdai, dai, eth } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport { InjectedSigner, LocalSigner } from '@burner-wallet/core/signers';\nimport { InfuraGateway, InjectedGateway, XDaiGateway, } from '@burner-wallet/core/gateways';\nimport Exchange from '@burner-wallet/exchange';\nimport { xdaiBridge, uniswapDai } from '@burner-wallet/exchange/pairs';\nimport BurnerUI from '../../burner-ui/src';\nimport LegacyPlugin from '@burner-wallet/plugins/legacy';\n\n// Github Pages hack\nif (localStorage.getItem('path')) {\n  window.history.replaceState(null, 'MakerDAO Burner Wallet', localStorage.getItem('path'));\n  localStorage.removeItem('path');\n}\n\nconst core = new BurnerCore({\n  signers: [new InjectedSigner(), new LocalSigner()],\n  gateways: [\n    new InjectedGateway(),\n    new InfuraGateway(process.env.REACT_APP_INFURA_KEY),\n    new XDaiGateway(),\n  ],\n  assets: [xdai, dai, eth],\n});\n\nconst exchange = new Exchange({\n  pairs: [xdaiBridge, uniswapDai],\n});\n\nconst BurnerWallet = () =>\n  <BurnerUI\n    title=\"MakerDAO Wallet\"\n    core={core}\n    plugins={[exchange, new LegacyPlugin()]}\n  />\n\n\n\nReactDOM.render(<BurnerWallet />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}